version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: nova-meet-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: nova_meet
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - nova-meet-network

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: nova-meet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nova-meet-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nova-meet-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3001
      SOCKET_PORT: 3002
      DATABASE_URL: mongodb://admin:password@mongodb:27017/nova_meet?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - nova-meet-network

  # Frontend React Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nova-meet-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_SOCKET_URL: http://localhost:3002
      REACT_APP_ENV: production
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - nova-meet-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nova-meet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - nova-meet-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  nova-meet-network:
    driver: bridge
